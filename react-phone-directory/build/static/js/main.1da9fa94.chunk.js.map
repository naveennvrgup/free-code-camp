{"version":3,"sources":["components/list.js","actions/directory.js","components/add.js","actions/add.js","actions/edit.js","components/edit.js","components/view.js","components/state.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["directory","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","contacts","props","map","ele","i","react_default","a","createElement","className","react_router_dom","to","concat","fname","lname","onClick","deleteContact","length","history","push","Component","connect","state","dispatch","type","id","add","_getPrototypeOf2","_len","args","Array","_key","call","edit","componentDidMount","match","params","contact","setState","objectSpread","keys","forEach","updaten","componentWillUnmount","_addContact","e","preventDefault","addContact","_editContact","editContact","_this2","goBack","nfname","placeholder","onChange","target","nlname","nemail","nphone","d","name","console","log","view","phone","email","App","react_router","path","component","Add","View","List","components_state","Boolean","window","location","hostname","initialState","store","createStore","undefined","action","toConsumableArray","filter","defineProperty","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1da9fa94.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { deleteContact } from \"../actions/directory\";\n\nexport class directory extends Component {\n    static propTypes = {\n        deleteContact: PropTypes.func.isRequired,\n        contacts: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const contacts = this.props.contacts.map((ele, i) =>\n            <div key={i} className=\"contact p-2 d-flex px-4 justify-content-between align-items-center\">\n                <div>\n                    <i className=\"fa fa-user mr-3\"></i>\n                    <Link to={`/contact/${i}/`} className=\"name\">{ele.fname} {ele.lname}</Link>\n                </div>\n                <div>\n                    <button\n                        onClick={() => this.props.deleteContact(i)}\n                        className=\"btn btn-sm btn-warning\">\n                        <i className=\"fa fa-times\"></i>\n                    </button>\n                </div>\n            </div>\n        )\n\n        return (\n            <div>\n                <div className=\"directory\">\n                    <h3 className=\"py-3 text-center title font-weight-bold\">Phone Directory</h3>\n                    <div className=\"d-flex justify-content-between px-4 align-items-center\">\n                        <div className=\"total\">Total contacts: {this.props.contacts.length}</div>\n                        <div className=\"add\">\n                            <button\n                                onClick={() => this.props.history.push('/add/')}\n                                className=\"btn btn-warning btn-sm\">\n                                Add <i className=\"fa fa-plus\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"contacts mt-3\">\n                        {contacts}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts\n})\n\nconst mapDispatchToProps = dispatch => ({\n    deleteContact: i => dispatch(deleteContact(i))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(directory)\n","export const deleteContact = id => ({\n    type: 'deleteContact',\n    id\n})","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addContact, updaten } from '../actions/add';\nimport { editContact } from '../actions/edit'\n\nexport class add extends Component {\n    state = {\n        edit: false\n    }\n\n    componentDidMount = () => {\n        this.id = this.props.match.params['id']\n        if (this.id) {\n            const contact = this.props.contacts[this.id]\n\n            this.setState({\n                ...this.state,\n                edit: true,\n                contact\n            })\n\n            Object.keys(contact).forEach(ele => {\n                this.props.updaten('n' + ele, contact[ele])\n            })\n        }\n    }\n\n    componentWillUnmount = () => {\n        ['fname', 'lname', 'email', 'phone'].forEach(ele => {\n            this.props.updaten('n' + ele, '')\n        })\n    }\n\n\n\n    static propTypes = {\n        nfname: PropTypes.string.isRequired,\n        nlname: PropTypes.string.isRequired,\n        nemail: PropTypes.string.isRequired,\n        nphone: PropTypes.string.isRequired,\n        contacts: PropTypes.array.isRequired,\n        addContact: PropTypes.func.isRequired,\n        updaten: PropTypes.func.isRequired,\n    }\n\n    _addContact = e => {\n        e.preventDefault()\n        this.props.addContact()\n        this.props.history.push('')\n    }\n\n    _editContact = e => {\n        e.preventDefault()\n        this.props.editContact(this.id)\n        this.props.history.push('')\n    }\n\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={() => this.props.history.goBack()}\n                    className=\"btn btn-sm btn-warning\">\n                    <i className=\"fa fa-arrow-left\"></i>\n                </button>\n\n                <h3 className=\"mt-3\">\n                    {this.state.edit ? 'Edit Contact' : 'Add new contact'}\n                </h3>\n\n                <form className='mt-4'>\n                    <input\n                        value={this.props.nfname}\n                        className='form-control mt-2'\n                        placeholder='First name'\n                        onChange={(e) => this.props.updaten('nfname', e.target.value)}\n                        type=\"text\" id=\"nfname\" />\n                    <input\n                        value={this.props.nlname}\n                        className='form-control mt-2'\n                        placeholder='Last name'\n                        onChange={(e) => this.props.updaten('nlname', e.target.value)}\n                        type=\"text\" id=\"nlname\" />\n                    <input\n                        value={this.props.nemail}\n                        className='form-control mt-2'\n                        placeholder='Email'\n                        onChange={(e) => this.props.updaten('nemail', e.target.value)}\n                        type=\"text\" id=\"nemail\" />\n                    <input\n                        value={this.props.nphone}\n                        className='form-control mt-2'\n                        placeholder='Mobile'\n                        onChange={(e) => this.props.updaten('nphone', e.target.value)}\n                        type=\"text\" id=\"nphone\" />\n                    <div className=\"text-center mt-4\">\n                        <button\n                            onClick={this.state.edit ? this._editContact : this._addContact}\n                            className=\"btn btn-sm btn-warning\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => state\n\nconst mapDispatchToProps = d => ({\n    addContact: () => d(addContact()),\n    editContact: (id) => d(editContact(id)),\n    updaten: (name, value) => d(updaten(name, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(add)\n","export const addContact = () => {\n    return {\n        type: 'addContact',\n    }\n}\n\nexport const updaten = (name, value) => ({\n    type: 'updaten',\n    name, value\n})\n","export const editContact = (id) => ({\n    type: 'editContact',\n    id\n})","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport class edit extends Component {\n    static propTypes = {\n        prop: PropTypes\n    }\n\n    componentDidMount = () => {\n        console.log(this.props.match.params)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h3>Edit</h3>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(edit)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport class view extends Component {\n    static propTypes = {\n        contacts: PropTypes.array.isRequired\n    }\n\n    id = this.props.match.params['id']\n    contact = this.props.contacts[this.id]\n\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={() => this.props.history.goBack()}\n                    className=\"btn btn-sm btn-warning\">\n                    <i className=\"fa fa-arrow-left\"></i>\n                </button>\n                <h3  className='mt-3'>Contact</h3>\n                <div>\n                    <span>Name: </span>  \n                    {this.contact.fname} {this.contact.lname}\n                </div>\n                <div>\n                    <span>Phone: </span> \n                    {this.contact.phone}\n                </div>\n                <div>\n                    <span>Email: </span> \n                    {this.contact.email}\n                </div>\n                <div className=\"text-center\">\n                    <button\n                        onClick={() => this.props.history.push(`/contact/edit/${this.id}/`)}\n                        className=\"btn btn-sm btn-warning mt-3\">\n                        <i className=\"fa fa-pen\"></i> Edit\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(view)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport class state extends Component {\n    static propTypes = {\n        nfname: PropTypes.string.isRequired,\n        nlname: PropTypes.string.isRequired,\n        nemail: PropTypes.string.isRequired,\n        nphone: PropTypes.string.isRequired,\n    }\n\n    render() {\n        return (\n            <div className=\"state\">\n                <h3>State: </h3>\n                <div>\n                    <span>Total contacts:</span> {this.props.contacts.length}\n                </div>\n                <div>\n                    <span>First name:</span>  {this.props.nfname}\n                </div>\n                <div>\n                    <span>Last name:</span> {this.props.nlname}\n                </div>\n                <div>\n                    <span>Email:</span> {this.props.nemail}\n                </div>\n                <div>\n                    <span>Phone:</span> {this.props.nphone}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => state\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(state)\n","import React, { Component } from 'react';\nimport { withRouter, Switch, Route } from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './assets/app.css'\n\nimport List from './components/list';\nimport Add from './components/add'\nimport Edit from './components/edit'\nimport View from './components/view'\nimport State from './components/state'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App shadow p-5\">\n        <Switch>\n          <Route path='/contact/edit/:id' component={Add} />\n          <Route path='/contact/:id' component={View} />\n          <Route path='/add/' component={Add} />\n          <Route path='' component={List} />\n        </Switch>\n        <State />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\n    contacts: [{\n        fname: 'Naveen',\n        lname: 'sundar',\n        phone: '8940073123',\n        email: 'naveennvrgup@gmail.com'\n    }, {\n        fname: 'Sangeeth',\n        lname: 'soundar',\n        phone: '1654465464',\n        email: 'sangeeth@gmail.com'\n    },{\n        fname: 'Naveen',\n        lname: 'sundar',\n        phone: '8940073123',\n        email: 'naveennvrgup@gmail.com'\n    }, {\n        fname: 'Sangeeth',\n        lname: 'soundar',\n        phone: '1654465464',\n        email: 'sangeeth@gmail.com'\n    },{\n        fname: 'Naveen',\n        lname: 'sundar',\n        phone: '8940073123',\n        email: 'naveennvrgup@gmail.com'\n    }, {\n        fname: 'Sangeeth',\n        lname: 'soundar',\n        phone: '1654465464',\n        email: 'sangeeth@gmail.com'\n    },],\n    nfname: '',\n    nlname: '',\n    nphone: '',\n    nemail: ''\n}\n\nexport default (state = initialState, action) => {\n    let contacts\n    switch (action.type) {\n        case 'addContact':\n            contacts = [...state.contacts]\n            contacts.push({\n                fname: state.nfname,\n                lname: state.nlname,\n                email: state.nemail,\n                phone: state.nphone,\n            })\n            return {\n                ...state,\n                contacts,\n                nfname: '',\n                nlname: '',\n                nemail: '',\n                nphone: '',\n            }\n        case 'editContact':\n            contacts = [...state.contacts]\n            contacts[action.id] = {\n                fname: state.nfname,\n                lname: state.nlname,\n                email: state.nemail,\n                phone: state.nphone,\n            }\n            return {\n                ...state,\n                contacts,\n                nfname: '',\n                nlname: '',\n                nemail: '',\n                nphone: '',\n            }\n        case 'deleteContact':\n            contacts = [...state.contacts]\n            contacts = contacts.filter((ele, i) => i !== action.id)\n            return {\n                ...state,\n                contacts\n            }\n        case 'updaten':\n            return {\n                ...state,\n                [action.name]: action.value\n            }\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducer'\n\n\nlet store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}